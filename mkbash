#!/bin/bash 
#v2.0#

#Checking required files/directories#

##Check for mkbash folder.##
if [ ! -d ~/.mkbash ]
then
mkdir -p ~/.mkbash 
echo
echo "mkbash directory created"
fi

##Check for script folder.##
if [ ! -d ~/.mkbash/scripts ]
then
mkdir ~/.mkbash/scripts
echo
echo "mkbash/scripts directory created"
fi

##Check mkbashrc##
if [ ! -f ~/.mkbashrc ]
then
echo > ~/.mkbashrc
echo "source ~/.mkbashrc" >> ~/.bashrc
echo "alias mkbsource='source ~/.bashrc'"
echo
echo ".mkbashrc created and added to bashrc"
source ~/.bashrc
fi

#info#
tput smso;
echo "  __  __   _  __  ____       _      ____    _   _ ";
echo " |  \/  | | |/ / | __ )     / \    / ___|  | | | |";
echo " | |\/| | | ' /  |  _ \    / _ \   \___ \  | |_| |";
echo " | |  | | | . \  | |_) |  / ___ \   ___) | |  _  |";
echo " |_|  |_| |_|\_\ |____/  /_/   \_\ |____/  |_| |_|";
echo "                                                  ";
tput rmso;
echo "-This script simplifies making commands for executing scripts-"
echo "Code by Inbell1s"
echo
echo
tput smso;
echo "Options:"
PS3='
What would you like to do?:'
options=("Create" "Rename" "Delete" "List" "Show" "Update" "Quit")
tput rmso;
select opt in "${options[@]}"
do
    case $opt in
        "Create")

#Create option#
		tput smso;
		echo "Command Creation"
		echo
		echo "Specify the desired command name and full command of script"
		tput rmso;
		echo
		echo "Command name:"
		read -r Name
			while true; do
			 if [ "$Name" = "" ]
			  then
			   tput smso;
    			   echo "No name given!"
			   tput rmso;
			   echo
			   echo "Please set the command name:"
		   	   read -r Name
			  else
			   break
			 fi
			done
		echo
		echo "Full script command:"
		read -r Command
			while true; do
                         if [ "$Command" = "" ]
                          then
                           tput smso;
                           echo "No command given!"
                           tput rmso;
                           echo
                           echo "Please set the command:"
                           read -r Command
                          else
                           break
                         fi
                        done

		echo
	
#Input validation#

while true; do
	if command -v $Name >/dev/null 2>&1
 		then
  		tput smso;
  		echo "Command already exists, please use another name."
  		tput rmso;
  		echo "New command name:"
  		read -r Name
	else
  		break
	fi
done

while true; do
if command -v $Command >/dev/null 2>&1
 then
  break
 else
  tput smso;
  echo "This command does not seem to run. Please use a runnable command."
  tput rmso;
  echo "New script command:"
  read -r Command
fi
done

#Creating command#
echo "alias "$Name"='~/.mkbash/scripts/"$Name"'" >> ~/.mkbashrc
echo "#!/bin/bash
##mkbcf##
"$Command" "$@"" > ~/.mkbash/scripts/"$Name"

#Make executable and source .mkbashrc#
chmod +x ~/.mkbash/scripts/"$Name"
tput smso;

#Finishing#

echo
echo
echo 'Creation complete, test your command using: "'"$Name"'"'
tput rmso;
exec bash
exit 0
;;

"Rename")
		tput smso;
		echo "Rename existing command, please specify old name and new name:"
		tput rmso;
		echo
                echo "Old command name:"
                read -r oldname
			while true; do
			 if [ "$oldname" = "" ]
			  then
			   tput smso;
    			   echo "No name given!"
			   tput rmso;
			   echo
			   echo "Please set the old command name:"
		   	   read -r oldname
			  else
			   break
			 fi
			done
                echo
                echo "New command name:"
                read -r newname
			while true; do
			 if [ "$newname" = "" ]
			  then
			   tput smso;
    			   echo "No name given!"
			   tput rmso;
			   echo
			   echo "Please set the new command name:"
		   	   read -r Name
			  else
			   break
			 fi
			done

while true; do
	if command -v $newname >/dev/null 2>&1
 		then
  		tput smso;
  		echo "Command already exists, please use another name."
  		tput rmso;
  		echo "New command name:"
  		read -r newname
	else
  		break
	fi
done

      while true; do
     if ~/.mkbash/scripts/"$oldname" > /dev/null 
                then
		mv ~/.mkbash/scripts/"$oldname" ~/.mkbash/scripts/"$newname"
	        sed -i "s/alias $oldname/alias $newname/g" ~/.mkbashrc
		sed -i "s/scripts\\/$oldname/scripts\\/$newname/g" ~/.mkbashrc
		tput smso;
                echo "Command changed from "$oldname" to "$newname"."
                tput rmso;
		exit
        else
                tput smso;
		echo "Command does not exist/is not a mkbash command, please use a valid command."
		tput rmso
		ls ~/.mkbash/scripts/
		echo
		echo "Old command:"
		read -r oldname
        fi
done
exec bash
exit 0
;;

"Delete")
	tput smso;
            echo "Remove existing command."
	    echo
	    echo "Available commands:"
        tput rmso;
ls ~/.mkbash/scripts/
echo
	
	    echo "Name of the command you wish to delete:"
	    read -r delete
		while true; do
			 if [ "$delete" = "" ]
			  then
			   tput smso;
    			   echo "No name given!"
			   tput rmso;
			   echo
			   echo "Please specify the command name to delete:"
		   	   read -r delete
			  else
			   break
			 fi
			done
	
while true; do
      if [ -f ~/.mkbash/scripts/"$delete" ]
                then
                rm ~/.mkbash/scripts/"$delete"
                sed -i "s/alias $delete/\\#\\# DELETED alias $delete/g" ~/.mkbashrc
		tput smso;
                echo "Command "$delete" removed."
                tput rmso;
                exit
else
                tput smso;
                echo "Command does not exist/is not a mkbash command, please use a valid command."
                tput rmso
                ls ~/.mkbash/scripts/
                echo
                echo "Command you wish to delete:"
                read -r delete

fi
done
exec bash
exit 0
            ;;
"List")
        tput smso;
            echo "List of all created commands:"
            echo
        tput rmso;      
            ls ~/.mkbash/scripts/
            echo
	    exit 0
            ;;

 "Show")
            tput smso;
            echo "Choose the command you want to show:"
            tput rmso;
            echo
            ls ~/.mkbash/scripts/
            echo "Command name:"
            read -r show
			while true; do
			 if [ "$show" = "" ]
			  then
			   tput smso;
    			   echo "No name given!"
			   tput rmso;
			   echo
			   echo "Please specify the command name to show:"
		   	   read -r show
			  else
			   break
			 fi
			done
            echo
            echo
 while true; do
        if [ -f ~/.mkbash/scripts/"$show" ] 
	  then
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
            cat ~/.mkbash/scripts/$show
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
	exit
else
                tput smso;
                echo "Command does not exist/is not a mkbash command, please use a valid command."
                tput rmso
echo
echo "Available commands:"
                ls ~/.mkbash/scripts/
                echo
                echo "Command you wish to show:"
                read -r show

fi
done
exit 0
            ;;
"Update")
curl https://raw.githubusercontent.com/Inbell1s/mkbash/master/mkbash > /bin/mkbash
		tput smso;
		echo "You are now up to date!"
		tput rmso;
		exit
	   ;;
        
	"Quit")
            exit
            ;;
        *) echo "invalid option $REPLY";;
esac
done
exit 0


